Script started on Wed Mar 23 21:27:38 2016
sh-4.3$ ls -l
total 354
-rwxr-xr-x   1 dcalmes  ics2020    19200 Mar 20 20:00 a.out
-rw-rwx---   1 dcalmes  ics2020     4073 Mar 14 09:29 lab1.cpp
-rw-rwx---   1 dcalmes  ics2020     6188 Mar 14 09:31 lab1.log
-rw-rwx---   1 dcalmes  ics2020     4458 Mar 14 10:03 lab2.cpp
-rw-rwx---   1 dcalmes  ics2020     8365 Mar 14 10:07 lab2.log
-rw-r--r--   1 dcalmes  ics2020     7472 Mar 19 16:57 lab3.cpp
-rw-r--r--   1 dcalmes  user       14262 Mar 20 18:54 lab3.log
-rw-r--r--   1 dcalmes  ics2020      626 Jan 29  2013 lab3.txt
-rw-rwx---   1 dcalmes  ics2020     7109 Feb 24 18:47 lab4.cpp
-rw-rwx---   1 dcalmes  ics2020    13304 Feb 24 18:53 lab4.log
-rw-rwx---   1 dcalmes  ics2020      400 Feb 24 17:56 lab4.txt
-rw-rwx---   1 dcalmes  ics2020     5645 Mar  2 18:51 lab5.cpp
-rw-rwx---   1 dcalmes  ics2020    10026 Mar  2 18:54 lab5.log
-rw-rwx---   1 dcalmes  ics2020      315 Mar  2 14:40 lab5.txt
-rw-r--r--   1 dcalmes  ics2020    11354 Mar 23 21:27 lab6.cpp
-rw-r--r--   1 dcalmes  user           0 Mar 23 21:27 lab6.log
-rw-r--r--   1 dcalmes  ics2020     1937 Mar 23 21:18 lab6H.h
-rw-r--r--   1 dcalmes  ics2020     2408 Mar 23 21:27 lab6client.cpp
lrwxrwxrwx   1 dcalmes  ics2020       24 Feb  5 16:39 lib -> /home/classes/cs2020/Lib
-rw-r--r--   1 dcalmes  ics2020    12117 Mar 16 02:15 prog1.cpp
-rw-r--r--   1 dcalmes  user       18769 Mar 16 02:34 prog1.log
-rw-r--r--   1 dcalmes  ics2020      400 Jan  1  2015 prog1.txt
-rw-rwx---   1 dcalmes  ics2020     6668 Feb 23 20:06 prog3.cpp
-rw-rwx---   1 dcalmes  ics2020     9502 Feb 19 20:20 prog3.log
-rw-rwx---   1 dcalmes  ics2020      259 Jan  1  2015 prog3.txt
-rw-rwx---   1 dcalmes  ics2020     1738 Feb 26 17:25 prog4.cpp
-rw-rwx---   1 dcalmes  ics2020      649 Mar  6  2015 prog4.txt
-rw-rwx---   1 dcalmes  ics2020       54 Mar 14 09:10 sample.txt
sh-4.3$ cat lab6. H.h
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Program:     Lab 6
// Purpose:             This programs purpose is to use a class in order to find and display a Circles radius, positions,
//                              and the quadrant it belongs to.
// Input:               This program requires the user to input the radius, x coordinate, and y coordinate.  Also, in order to
//                              move the circle it calls for the user to input how much the user wants to move each x and y.
// Processing:  This program will use the circle information the user inputs and will go through various functions in
//                              order to display the circle's radius, x coordinate, and y coordinate.  It will then use the inputs of
//                              how much the user wants to move the circle in order to display its new location and its radius.  This
//                              program will also use the x and y coordinates in order to tell the user what quadrant the circle will
//                              fall under.
// Output:              This program outputs the circles radius, x coordinate, and y coordnate of the circle.  Also, after moving
//                              the circle it will output the new x and y coordinate.  Also, it will output the quadrant that the circle
//                              will fall under.
// Programmer:  Douglas Calmes
// Class:       CS 2020 Spring 2016
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef LAB6_H
#define LAB6_H

// Declaration of class Circle

class Circle
{
private:
        double radius;
        double xPos;
        double yPos;
public:
        //      Accessors
        double getRadius() const;
        double getxPos() const;
        double getyPos() const;

        //      Mutators
        void setRadius(double);
        void setxPos(double);
        void setyPos(double);

        //      Constructors
        void displayCircle(double, double, double);
        void moveCircle(double, double, double&, double&);
        void displayQuad(double, double);
};

#endif

sh-4.3$ cat lab6.cpp
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Program:     Lab 6
// Purpose:             This programs purpose is to use a class in order to find and display a Circles radius, positions,
//                              and the quadrant it belongs to.
// Input:               This program requires the user to input the radius, x coordinate, and y coordinate.  Also, in order to
//                              move the circle it calls for the user to input how much the user wants to move each x and y.
// Processing:  This program will use the circle information the user inputs and will go through various functions in
//                              order to display the circle's radius, x coordinate, and y coordinate.  It will then use the inputs of
//                              how much the user wants to move the circle in order to display its new location and its radius.  This
//                              program will also use the x and y coordinates in order to tell the user what quadrant the circle will
//                              fall under.
// Output:              This program outputs the circles radius, x coordinate, and y coordnate of the circle.  Also, after moving
//                              the circle it will output the new x and y coordinate.  Also, it will output the quadrant that the circle
//                              will fall under.
// Programmer:  Douglas Calmes
// Class:       CS 2020 Spring 2016
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "lab6H.h"
#include <iostream>
#include <cstdlib>
using namespace std;

//////////////////////////////////////////////////////////////////////////////
// Lab 6                                                                                                                                                                                                                                           /      
// Programmer:          Douglas Calmes                                                                                   
// Class:           CS 2020, Spring 2016                                     
//                                                                           
// Function:        setRadius                                                   
// Description:     This function sets the radius of the circle
// Parameters:          r- radius of the circle
// Returns:                     Nothing              
//////////////////////////////////////////////////////////////////////////////

void Circle::setRadius(double r)
{
        if (r >= 0)
                radius = r;
        else
        {
                cout << "ERROR: This radius value is invalid!" << endl;         // Error msg
                exit(EXIT_FAILURE);
        }
}

//////////////////////////////////////////////////////////////////////////////
// Lab 6                                                                                                                                                                                                                                           /      
// Programmer:          Douglas Calmes                                                                                   
// Class:           CS 2020, Spring 2016                                     
//                                                                           
// Function:        setxPos                                                 
// Description:     This function sets the x coordinate of the circle
// Parameters:          x- coordinate of x
// Returns:                     Nothing              
//////////////////////////////////////////////////////////////////////////////

void Circle::setxPos(double x)
{
        xPos = x;
}

//////////////////////////////////////////////////////////////////////////////
// Lab 6                                                                                                                                                                                                                                           /      
// Programmer:          Douglas Calmes                                                                                   
// Class:           CS 2020, Spring 2016                                     
//                                                                           
// Function:        setyPos                                                   
// Description:     This function sets the y coordinate of the circle
// Parameters:          y- coordinate of y
// Returns:                     Nothing              
//////////////////////////////////////////////////////////////////////////////

void Circle::setyPos(double y)
{
        yPos = y;
}

//////////////////////////////////////////////////////////////////////////////
// Lab 6                                                                                                                                                                                                                                           /      
// Programmer:          Douglas Calmes                                                                                   
// Class:           CS 2020, Spring 2016                                     
//                                                                           
// Function:        getRadius                                                   
// Description:     This function gets the radius of the circle
// Parameters:          None
// Returns:                     radius         
//////////////////////////////////////////////////////////////////////////////

double Circle::getRadius() const
{
        return radius;
}

//////////////////////////////////////////////////////////////////////////////
// Lab 6                                                                                                                                                                                                                                           /      
// Programmer:          Douglas Calmes                                                                                   
// Class:           CS 2020, Spring 2016                                     
//                                                                           
// Function:        getxPos                                                
// Description:     This function gets the x coordinate of the circle
// Parameters:          None
// Returns:                     xPos           
//////////////////////////////////////////////////////////////////////////////

double Circle::getxPos() const
{
        return xPos;
}

//////////////////////////////////////////////////////////////////////////////
// Lab 6                                                                                                                                                                                                                                           /      
// Programmer:          Douglas Calmes                                                                                   
// Class:           CS 2020, Spring 2016                                     
//                                                                           
// Function:        getyPos                                                   
// Description:     This function gets the y coordinate of the circle
// Parameters:          None
// Returns:                     yPos            
//////////////////////////////////////////////////////////////////////////////

double Circle::getyPos() const
{
        return yPos;
}

//////////////////////////////////////////////////////////////////////////////
// Lab 6                                                                                                                                                                                                                                           /      
// Programmer:          Douglas Calmes                                                                                   
// Class:           CS 2020, Spring 2016                                     
//                                                                           
// Function:        displayCircle                                                   
// Description:     This function displays the radius and coordinates of
//                                              the circle
// Parameters:          radius- radius of the circle
//                                      xPos-   x coordinate of the circle
//                                      yPos-   y coordinate of the circle
// Returns:                     Nothing              
//////////////////////////////////////////////////////////////////////////////

void Circle::displayCircle(double radius, double xPos, double yPos)
{
        cout << "The Circle object with radius " << radius << " has coordinates (" << xPos << ", " << yPos << ")" << endl;
}

//////////////////////////////////////////////////////////////////////////////
// Lab 6                                                                                                                                                                                                                                           /      
// Programmer:          Douglas Calmes                                                                                   
// Class:           CS 2020, Spring 2016                                     
//                                                                           
// Function:        moveCircle                                                  
// Description:     This function ask the user how much they want to move
//                                              the circle.  User inputs how much they want to move
//                                              the x and y coordinates.  It uses these inputs to 
//                                              calculate the new position.
// Parameters:
//                                      xPos-   x coordinate of the circle
//                                      yPos-   y coordinate of the circle
//                                      xDelt-  move x coordinate
//                                      yDelt-  move y coordinate
// Returns:                     Nothing              
//////////////////////////////////////////////////////////////////////////////

void Circle::moveCircle(double xDelt, double yDelt, double &xPos, double &yPos)
{
        //      Calculate new coordinates
        xPos = xPos + xDelt;
        yPos = yPos + yDelt;
}

//////////////////////////////////////////////////////////////////////////////
// Lab 6                                                                                                                                                                                                                                           /      
// Programmer:          Douglas Calmes                                                                                   
// Class:           CS 2020, Spring 2016                                     
//                                                                           
// Function:        displayQuad                                                  
// Description:     This function displays the quadrant of the circle
// Parameters:
//                                      xPos-   x coordinate of the circle
//                                      yPos-   y coordinate of the circle
// Returns:                     Nothing              
//////////////////////////////////////////////////////////////////////////////

void Circle::displayQuad(double xPos, double yPos)
{
        //      If statments to determine what quadrant the circle falls in
        if (xPos > 0 && yPos > 0)
        {
                cout << "The Circle object is in Quadrant 1." << endl;
        }
        if (xPos < 0 && yPos > 0)
        {
                cout << "The Circle object is in Quadrant 2." << endl;
        }
        if (xPos < 0 && yPos < 0)
        {
                cout << "The Circle object is in Quadrant 3." << endl;
        }
        if (xPos > 0 && yPos < 0)
        {
                cout << "The Circle object is in Quadrant 4." << endl;
        }
}








sh-4.3$ cat lab6client.cpp
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Program:     Lab 6
// Purpose:             This programs purpose is to use a class in order to find and display a Circles radius, positions,
//                              and the quadrant it belongs to.
// Input:               This program requires the user to input the radius, x coordinate, and y coordinate.  Also, in order to
//                              move the circle it calls for the user to input how much the user wants to move each x and y.
// Processing:  This program will use the circle information the user inputs and will go through various functions in
//                              order to display the circle's radius, x coordinate, and y coordinate.  It will then use the inputs of
//                              how much the user wants to move the circle in order to display its new location and its radius.  This
//                              program will also use the x and y coordinates in order to tell the user what quadrant the circle will
//                              fall under.
// Output:              This program outputs the circles radius, x coordinate, and y coordnate of the circle.  Also, after moving
//                              the circle it will output the new x and y coordinate.  Also, it will output the quadrant that the circle
//                              will fall under.
// Programmer:  Douglas Calmes
// Class:       CS 2020 Spring 2016
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <iostream>
#include "lab6H.h"
using namespace std;

int main()
{
        Circle ring;
        double ringRadius;
        double ringxPos;
        double ringyPos;
        double ringxMove;
        double ringyMove;

        //      Get the radius, xpos, and ypos from user.
        cout << "Please enter radius, x coordinate, and y coordinate: ";
        cin >> ringRadius;
        cin >> ringxPos;
        cin >> ringyPos;

        //      These functions store the variables of the circle
        ring.setRadius(ringRadius);
        ring.setxPos(ringxPos);
        ring.setyPos(ringyPos);

        //      This function displays the circle's inputs and displays the quadrant
        ring.displayCircle(ringRadius, ringxPos, ringyPos);
        ring.displayQuad(ringxPos, ringyPos);

        //      This function moves the circle and displays the quadrant
        cout << "Please enter delta x, delta y: ";
        cin >> ringxMove;
        cin >> ringyMove;

        ring.moveCircle(ringxMove, ringyMove, ringxPos, ringyPos);
        ring.displayCircle(ringRadius, ringxPos, ringyPos);
        ring.displayQuad(ringxPos, ringyPos);

        system("Pause");
        return 0;
}
sh-4.3$ g++ lab6.cpp lab6client.cpp
sh-4.3$ a.out
Please enter radius, x coordinate, and y coordinate: 8 15 6
The Circle object with radius 8 has coordinates (15, 6)
The Circle object is in Quadrant 1.
Please enter delta x, delta y: 5 -10
The Circle object with radius 8 has coordinates (20, -4)
The Circle object is in Quadrant 4.
sh: Pause: not found
sh-4.3$ exit
exit

script done on Wed Mar 23 21:29:09 2016
